Security:
  ☐ update merge dependency
  ☐ test sql injection

PostgreMote:
  ☐ implement an SQL-like DSL
    ✔ use symbols instead of $ and $$ @done(symbols cannot be serialized/deserialized using JSON)
    ☐ get rid of sqlstring dependency
    ✔ implement jsql.insert @done
    ✔ check if columns for insert closure were declared in the table @done
    ☐ check if there is at least one value to insert but columns with default values can be skiped
    ☐ implement jsql.grant
    ☐ implement jsql.revoke
    ☐ implement jsql.drop(table)
    ☐ implement jsql.drop(role)
  ☐ implement a simple server that converts an SQL-like DSL received over some sort of protocol and then makes a request to the database
    ☐ add jwt in cookie based authorization middleware
  ☐ implement a tool that generates TypeScript code for PostgreSQL stored functions and tables from the chosen scheme
  ☐ implement database migration tool for PostgreMote with auto code generation
  ☐ implement database testing tool PostgreMote with all the generated types used so we could make a static analysis over the tests

Test runner:
  ☐ implement bibimbap's own test runner

Archive:
  ✔ implement jsql.role @done @project(PostgreMote)
  ✔ implement jsql.create(role) @done @project(PostgreMote)
  ✔ use $ as a JSQL type definition and $$ as a table name @done @project(PostgreMote)
  ✔ escape string values @done @project(PostgreMote)
  ✔ configure jest and wallaby @done @project(PostgreMote)
  ✔ jsql should be serializable and jsql DSL feature-rich @done @project(PostgreMote)
